#include <math.h>
#include <stdlib.h>
#include "Complex.h"
#include "FFT_radix2.h"

void FFT_radix2_rcs(unsigned int* maxIndex, float* maxFFT, float* magFFT, Complex* FFT, Complex* input, Complex* W_N ,unsigned int N)
{
    if(N==2){
        FFT[0]=input[0]+input[1];
        FFT[1]=input[0]-input[1];
    }

    xeven=input[0:2:];
    xodd=input[1:2:];
    Complex Xeven[N/2];
    Complex Xodd[N/2];
    FFT_radix2_rcs(unsigned int* maxIndex, float* maxFFT, float* magFFT,Xeven,xeven,W_N ,N/2)
    FFT_radix2_rcs(unsigned int* maxIndex, float* maxFFT, float* magFFT,Xodd,xodd,W_N ,N/2)

    Complex Wn=W_N[N];
    int k=0;
    for(k=0;k<N/2;k++){
        FFT[k]=Xeven[k]+Wn^k*Xodd[k];
        FFT[k+N/2]=Xeven[k]-Wn^k*Xodd[k];
    }
}

Complex RADIX2_rcs(unsigned int size, unsigned int k, Complex* W_N, Complex* input, Complex* EO)
{
	Complex result;

	// Codigo a Completar
	result.real = 0.;
	result.img = 0.;
	return result;

}
